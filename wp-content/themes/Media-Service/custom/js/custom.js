/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sass_style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sass/style.scss */ \"./sass/style.scss\");\n/* harmony import */ var cash_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cash-dom */ \"./node_modules/cash-dom/dist/cash.js\");\n/* harmony import */ var cash_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cash_dom__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n// Use the Cash library's ready function to ensure the DOM is fully loaded\n// $(function () {\n//   // Select the menu toggle button using Cash\n//   var menuToggle = $('.menu-toggle');\n//   console.log(menuToggle);\n\n//   // Attach a click event handler to the toggle button\n//   menuToggle.on('click', function () {\n//     console.log('click');\n//     // Toggle the 'toggled' class on the main navigation\n//     $('#site-navigation').toggleClass('toggled');\n//     console.log($('#site-navigation').hasClass('toggled'));\n//   });\n// });\n\ncash_dom__WEBPACK_IMPORTED_MODULE_1___default()(function () {\n  var menuToggle = cash_dom__WEBPACK_IMPORTED_MODULE_1___default()('.menu-toggle');\n  var siteNavigation = cash_dom__WEBPACK_IMPORTED_MODULE_1___default()('#site-navigation');\n  var menuList = cash_dom__WEBPACK_IMPORTED_MODULE_1___default()('ul', siteNavigation);\n  menuToggle.on('click', function () {\n    // Toggle class to apply CSS transitions\n    siteNavigation.toggleClass('toggled');\n\n    // Check the new state after the class toggle\n    if (siteNavigation.hasClass('toggled')) {\n      // If the menu is now open, set max-height to a value that can cover the menu content\n      menuList.css('max-height', menuList.get(0).scrollHeight + 'px');\n    } else {\n      // If the menu is now closed, reset max-height after transitions have completed\n      setTimeout(function () {\n        if (!siteNavigation.hasClass('toggled')) {\n          menuList.css('max-height', '0');\n        }\n      }, 300); // This delay should match the duration of the CSS transitions\n    }\n  });\n});\n\ncash_dom__WEBPACK_IMPORTED_MODULE_1___default()(function () {\n  var lastScrollTop = 0; // 最後のスクロール位置を保存する変数\n  var siteHeader = cash_dom__WEBPACK_IMPORTED_MODULE_1___default()('#masthead'); // ヘッダー要素のIDまたはクラスを指定\n\n  cash_dom__WEBPACK_IMPORTED_MODULE_1___default()(window).on('scroll', function () {\n    var st = window.pageYOffset || document.documentElement.scrollTop;\n\n    // トップから80pxの範囲内ではナビゲーションを常に表示\n    if (st <= 80) {\n      siteHeader.removeClass('nav-up').addClass('nav-down');\n    } else {\n      if (st > lastScrollTop) {\n        // 下にスクロールしている時\n        siteHeader.removeClass('nav-down').addClass('nav-up');\n      } else {\n        // 上にスクロールしている時\n        siteHeader.removeClass('nav-up').addClass('nav-down');\n      }\n    }\n    lastScrollTop = st <= 0 ? 0 : st; // ネガティブなスクロール値を防ぐ\n  });\n});\n\n//# sourceURL=webpack://underscores/./src/index.js?");

/***/ }),

/***/ "./node_modules/cash-dom/dist/cash.js":
/*!********************************************!*\
  !*** ./node_modules/cash-dom/dist/cash.js ***!
  \********************************************/
/***/ ((module) => {

eval("(function(){\n\"use strict\";\nvar doc = document;\nvar win = window;\nvar docEle = doc.documentElement;\nvar createElement = doc.createElement.bind(doc);\nvar div = createElement('div');\nvar table = createElement('table');\nvar tbody = createElement('tbody');\nvar tr = createElement('tr');\nvar isArray = Array.isArray, ArrayPrototype = Array.prototype;\nvar concat = ArrayPrototype.concat, filter = ArrayPrototype.filter, indexOf = ArrayPrototype.indexOf, map = ArrayPrototype.map, push = ArrayPrototype.push, slice = ArrayPrototype.slice, some = ArrayPrototype.some, splice = ArrayPrototype.splice;\nvar idRe = /^#(?:[\\w-]|\\\\.|[^\\x00-\\xa0])*$/;\nvar classRe = /^\\.(?:[\\w-]|\\\\.|[^\\x00-\\xa0])*$/;\nvar htmlRe = /<.+>/;\nvar tagRe = /^\\w+$/;\n// @require ./variables.ts\nfunction find(selector, context) {\n    var isFragment = isDocumentFragment(context);\n    return !selector || (!isFragment && !isDocument(context) && !isElement(context))\n        ? []\n        : !isFragment && classRe.test(selector)\n            ? context.getElementsByClassName(selector.slice(1).replace(/\\\\/g, ''))\n            : !isFragment && tagRe.test(selector)\n                ? context.getElementsByTagName(selector)\n                : context.querySelectorAll(selector);\n}\n// @require ./find.ts\n// @require ./variables.ts\nvar Cash = /** @class */ (function () {\n    function Cash(selector, context) {\n        if (!selector)\n            return;\n        if (isCash(selector))\n            return selector;\n        var eles = selector;\n        if (isString(selector)) {\n            var ctx = context || doc;\n            eles = idRe.test(selector) && isDocument(ctx)\n                ? ctx.getElementById(selector.slice(1).replace(/\\\\/g, ''))\n                : htmlRe.test(selector)\n                    ? parseHTML(selector)\n                    : isCash(ctx)\n                        ? ctx.find(selector)\n                        : isString(ctx)\n                            ? cash(ctx).find(selector)\n                            : find(selector, ctx);\n            if (!eles)\n                return;\n        }\n        else if (isFunction(selector)) {\n            return this.ready(selector); //FIXME: `fn.ready` is not included in `core`, but it's actually a core functionality\n        }\n        if (eles.nodeType || eles === win)\n            eles = [eles];\n        this.length = eles.length;\n        for (var i = 0, l = this.length; i < l; i++) {\n            this[i] = eles[i];\n        }\n    }\n    Cash.prototype.init = function (selector, context) {\n        return new Cash(selector, context);\n    };\n    return Cash;\n}());\nvar fn = Cash.prototype;\nvar cash = fn.init;\ncash.fn = cash.prototype = fn; // Ensuring that `cash () instanceof cash`\nfn.length = 0;\nfn.splice = splice; // Ensuring a cash collection gets printed as array-like in Chrome's devtools\nif (typeof Symbol === 'function') { // Ensuring a cash collection is iterable\n    fn[Symbol['iterator']] = ArrayPrototype[Symbol['iterator']];\n}\nfunction isCash(value) {\n    return value instanceof Cash;\n}\nfunction isWindow(value) {\n    return !!value && value === value.window;\n}\nfunction isDocument(value) {\n    return !!value && value.nodeType === 9;\n}\nfunction isDocumentFragment(value) {\n    return !!value && value.nodeType === 11;\n}\nfunction isElement(value) {\n    return !!value && value.nodeType === 1;\n}\nfunction isText(value) {\n    return !!value && value.nodeType === 3;\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isUndefined(value) {\n    return value === undefined;\n}\nfunction isNull(value) {\n    return value === null;\n}\nfunction isNumeric(value) {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n}\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null)\n        return false;\n    var proto = Object.getPrototypeOf(value);\n    return proto === null || proto === Object.prototype;\n}\ncash.isWindow = isWindow;\ncash.isFunction = isFunction;\ncash.isArray = isArray;\ncash.isNumeric = isNumeric;\ncash.isPlainObject = isPlainObject;\nfunction each(arr, callback, _reverse) {\n    if (_reverse) {\n        var i = arr.length;\n        while (i--) {\n            if (callback.call(arr[i], i, arr[i]) === false)\n                return arr;\n        }\n    }\n    else if (isPlainObject(arr)) {\n        var keys = Object.keys(arr);\n        for (var i = 0, l = keys.length; i < l; i++) {\n            var key = keys[i];\n            if (callback.call(arr[key], key, arr[key]) === false)\n                return arr;\n        }\n    }\n    else {\n        for (var i = 0, l = arr.length; i < l; i++) {\n            if (callback.call(arr[i], i, arr[i]) === false)\n                return arr;\n        }\n    }\n    return arr;\n}\ncash.each = each;\nfn.each = function (callback) {\n    return each(this, callback);\n};\nfn.empty = function () {\n    return this.each(function (i, ele) {\n        while (ele.firstChild) {\n            ele.removeChild(ele.firstChild);\n        }\n    });\n};\nfunction extend() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    var deep = isBoolean(sources[0]) ? sources.shift() : false;\n    var target = sources.shift();\n    var length = sources.length;\n    if (!target)\n        return {};\n    if (!length)\n        return extend(deep, cash, target);\n    for (var i = 0; i < length; i++) {\n        var source = sources[i];\n        for (var key in source) {\n            if (deep && (isArray(source[key]) || isPlainObject(source[key]))) {\n                if (!target[key] || target[key].constructor !== source[key].constructor)\n                    target[key] = new source[key].constructor();\n                extend(deep, target[key], source[key]);\n            }\n            else {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\ncash.extend = extend;\nfn.extend = function (plugins) {\n    return extend(fn, plugins);\n};\n// @require ./type_checking.ts\nvar splitValuesRe = /\\S+/g;\nfunction getSplitValues(str) {\n    return isString(str) ? str.match(splitValuesRe) || [] : [];\n}\nfn.toggleClass = function (cls, force) {\n    var classes = getSplitValues(cls);\n    var isForce = !isUndefined(force);\n    return this.each(function (i, ele) {\n        if (!isElement(ele))\n            return;\n        each(classes, function (i, c) {\n            if (isForce) {\n                force ? ele.classList.add(c) : ele.classList.remove(c);\n            }\n            else {\n                ele.classList.toggle(c);\n            }\n        });\n    });\n};\nfn.addClass = function (cls) {\n    return this.toggleClass(cls, true);\n};\nfn.removeAttr = function (attr) {\n    var attrs = getSplitValues(attr);\n    return this.each(function (i, ele) {\n        if (!isElement(ele))\n            return;\n        each(attrs, function (i, a) {\n            ele.removeAttribute(a);\n        });\n    });\n};\nfunction attr(attr, value) {\n    if (!attr)\n        return;\n    if (isString(attr)) {\n        if (arguments.length < 2) {\n            if (!this[0] || !isElement(this[0]))\n                return;\n            var value_1 = this[0].getAttribute(attr);\n            return isNull(value_1) ? undefined : value_1;\n        }\n        if (isUndefined(value))\n            return this;\n        if (isNull(value))\n            return this.removeAttr(attr);\n        return this.each(function (i, ele) {\n            if (!isElement(ele))\n                return;\n            ele.setAttribute(attr, value);\n        });\n    }\n    for (var key in attr) {\n        this.attr(key, attr[key]);\n    }\n    return this;\n}\nfn.attr = attr;\nfn.removeClass = function (cls) {\n    if (arguments.length)\n        return this.toggleClass(cls, false);\n    return this.attr('class', '');\n};\nfn.hasClass = function (cls) {\n    return !!cls && some.call(this, function (ele) { return isElement(ele) && ele.classList.contains(cls); });\n};\nfn.get = function (index) {\n    if (isUndefined(index))\n        return slice.call(this);\n    index = Number(index);\n    return this[index < 0 ? index + this.length : index];\n};\nfn.eq = function (index) {\n    return cash(this.get(index));\n};\nfn.first = function () {\n    return this.eq(0);\n};\nfn.last = function () {\n    return this.eq(-1);\n};\nfunction text(text) {\n    if (isUndefined(text)) {\n        return this.get().map(function (ele) { return isElement(ele) || isText(ele) ? ele.textContent : ''; }).join('');\n    }\n    return this.each(function (i, ele) {\n        if (!isElement(ele))\n            return;\n        ele.textContent = text;\n    });\n}\nfn.text = text;\n// @require core/type_checking.ts\n// @require core/variables.ts\nfunction computeStyle(ele, prop, isVariable) {\n    if (!isElement(ele))\n        return;\n    var style = win.getComputedStyle(ele, null);\n    return isVariable ? style.getPropertyValue(prop) || undefined : style[prop] || ele.style[prop];\n}\n// @require ./compute_style.ts\nfunction computeStyleInt(ele, prop) {\n    return parseInt(computeStyle(ele, prop), 10) || 0;\n}\n// @require css/helpers/compute_style_int.ts\nfunction getExtraSpace(ele, xAxis) {\n    return computeStyleInt(ele, \"border\".concat(xAxis ? 'Left' : 'Top', \"Width\")) + computeStyleInt(ele, \"padding\".concat(xAxis ? 'Left' : 'Top')) + computeStyleInt(ele, \"padding\".concat(xAxis ? 'Right' : 'Bottom')) + computeStyleInt(ele, \"border\".concat(xAxis ? 'Right' : 'Bottom', \"Width\"));\n}\n// @require css/helpers/compute_style.ts\nvar defaultDisplay = {};\nfunction getDefaultDisplay(tagName) {\n    if (defaultDisplay[tagName])\n        return defaultDisplay[tagName];\n    var ele = createElement(tagName);\n    doc.body.insertBefore(ele, null);\n    var display = computeStyle(ele, 'display');\n    doc.body.removeChild(ele);\n    return defaultDisplay[tagName] = display !== 'none' ? display : 'block';\n}\n// @require css/helpers/compute_style.ts\nfunction isHidden(ele) {\n    return computeStyle(ele, 'display') === 'none';\n}\n// @require ./cash.ts\nfunction matches(ele, selector) {\n    var matches = ele && (ele['matches'] || ele['webkitMatchesSelector'] || ele['msMatchesSelector']);\n    return !!matches && !!selector && matches.call(ele, selector);\n}\n// @require ./matches.ts\n// @require ./type_checking.ts\nfunction getCompareFunction(comparator) {\n    return isString(comparator)\n        ? function (i, ele) { return matches(ele, comparator); }\n        : isFunction(comparator)\n            ? comparator\n            : isCash(comparator)\n                ? function (i, ele) { return comparator.is(ele); }\n                : !comparator\n                    ? function () { return false; }\n                    : function (i, ele) { return ele === comparator; };\n}\nfn.filter = function (comparator) {\n    var compare = getCompareFunction(comparator);\n    return cash(filter.call(this, function (ele, i) { return compare.call(ele, i, ele); }));\n};\n// @require collection/filter.ts\nfunction filtered(collection, comparator) {\n    return !comparator ? collection : collection.filter(comparator);\n}\nfn.detach = function (comparator) {\n    filtered(this, comparator).each(function (i, ele) {\n        if (ele.parentNode) {\n            ele.parentNode.removeChild(ele);\n        }\n    });\n    return this;\n};\nvar fragmentRe = /^\\s*<(\\w+)[^>]*>/;\nvar singleTagRe = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\nvar containers = {\n    '*': div,\n    tr: tbody,\n    td: tr,\n    th: tr,\n    thead: table,\n    tbody: table,\n    tfoot: table\n};\n//TODO: Create elements inside a document fragment, in order to prevent inline event handlers from firing\n//TODO: Ensure the created elements have the fragment as their parent instead of null, this also ensures we can deal with detatched nodes more reliably\nfunction parseHTML(html) {\n    if (!isString(html))\n        return [];\n    if (singleTagRe.test(html))\n        return [createElement(RegExp.$1)];\n    var fragment = fragmentRe.test(html) && RegExp.$1;\n    var container = containers[fragment] || containers['*'];\n    container.innerHTML = html;\n    return cash(container.childNodes).detach().get();\n}\ncash.parseHTML = parseHTML;\nfn.has = function (selector) {\n    var comparator = isString(selector)\n        ? function (i, ele) { return find(selector, ele).length; }\n        : function (i, ele) { return ele.contains(selector); };\n    return this.filter(comparator);\n};\nfn.not = function (comparator) {\n    var compare = getCompareFunction(comparator);\n    return this.filter(function (i, ele) { return (!isString(comparator) || isElement(ele)) && !compare.call(ele, i, ele); });\n};\nfunction pluck(arr, prop, deep, until) {\n    var plucked = [];\n    var isCallback = isFunction(prop);\n    var compare = until && getCompareFunction(until);\n    for (var i = 0, l = arr.length; i < l; i++) {\n        if (isCallback) {\n            var val_1 = prop(arr[i]);\n            if (val_1.length)\n                push.apply(plucked, val_1);\n        }\n        else {\n            var val_2 = arr[i][prop];\n            while (val_2 != null) {\n                if (until && compare(-1, val_2))\n                    break;\n                plucked.push(val_2);\n                val_2 = deep ? val_2[prop] : null;\n            }\n        }\n    }\n    return plucked;\n}\n// @require core/pluck.ts\n// @require core/variables.ts\nfunction getValue(ele) {\n    if (ele.multiple && ele.options)\n        return pluck(filter.call(ele.options, function (option) { return option.selected && !option.disabled && !option.parentNode.disabled; }), 'value');\n    return ele.value || '';\n}\nfunction val(value) {\n    if (!arguments.length)\n        return this[0] && getValue(this[0]);\n    return this.each(function (i, ele) {\n        var isSelect = ele.multiple && ele.options;\n        if (isSelect || checkableRe.test(ele.type)) {\n            var eleValue_1 = isArray(value) ? map.call(value, String) : (isNull(value) ? [] : [String(value)]);\n            if (isSelect) {\n                each(ele.options, function (i, option) {\n                    option.selected = eleValue_1.indexOf(option.value) >= 0;\n                }, true);\n            }\n            else {\n                ele.checked = eleValue_1.indexOf(ele.value) >= 0;\n            }\n        }\n        else {\n            ele.value = isUndefined(value) || isNull(value) ? '' : value;\n        }\n    });\n}\nfn.val = val;\nfn.is = function (comparator) {\n    var compare = getCompareFunction(comparator);\n    return some.call(this, function (ele, i) { return compare.call(ele, i, ele); });\n};\ncash.guid = 1;\nfunction unique(arr) {\n    return arr.length > 1 ? filter.call(arr, function (item, index, self) { return indexOf.call(self, item) === index; }) : arr;\n}\ncash.unique = unique;\nfn.add = function (selector, context) {\n    return cash(unique(this.get().concat(cash(selector, context).get())));\n};\nfn.children = function (comparator) {\n    return filtered(cash(unique(pluck(this, function (ele) { return ele.children; }))), comparator);\n};\nfn.parent = function (comparator) {\n    return filtered(cash(unique(pluck(this, 'parentNode'))), comparator);\n};\nfn.index = function (selector) {\n    var child = selector ? cash(selector)[0] : this[0];\n    var collection = selector ? this : cash(child).parent().children();\n    return indexOf.call(collection, child);\n};\nfn.closest = function (comparator) {\n    var filtered = this.filter(comparator);\n    if (filtered.length)\n        return filtered;\n    var $parent = this.parent();\n    if (!$parent.length)\n        return filtered;\n    return $parent.closest(comparator);\n};\nfn.siblings = function (comparator) {\n    return filtered(cash(unique(pluck(this, function (ele) { return cash(ele).parent().children().not(ele); }))), comparator);\n};\nfn.find = function (selector) {\n    return cash(unique(pluck(this, function (ele) { return find(selector, ele); })));\n};\n// @require core/variables.ts\n// @require collection/filter.ts\n// @require traversal/find.ts\nvar HTMLCDATARe = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\nvar scriptTypeRe = /^$|^module$|\\/(java|ecma)script/i;\nvar scriptAttributes = ['type', 'src', 'nonce', 'noModule'];\nfunction evalScripts(node, doc) {\n    var collection = cash(node);\n    collection.filter('script').add(collection.find('script')).each(function (i, ele) {\n        if (scriptTypeRe.test(ele.type) && docEle.contains(ele)) { // The script type is supported // The element is attached to the DOM // Using `documentElement` for broader browser support\n            var script_1 = createElement('script');\n            script_1.text = ele.textContent.replace(HTMLCDATARe, '');\n            each(scriptAttributes, function (i, attr) {\n                if (ele[attr])\n                    script_1[attr] = ele[attr];\n            });\n            doc.head.insertBefore(script_1, null);\n            doc.head.removeChild(script_1);\n        }\n    });\n}\n// @require ./eval_scripts.ts\nfunction insertElement(anchor, target, left, inside, evaluate) {\n    if (inside) { // prepend/append\n        anchor.insertBefore(target, left ? anchor.firstChild : null);\n    }\n    else { // before/after\n        if (anchor.nodeName === 'HTML') {\n            anchor.parentNode.replaceChild(target, anchor);\n        }\n        else {\n            anchor.parentNode.insertBefore(target, left ? anchor : anchor.nextSibling);\n        }\n    }\n    if (evaluate) {\n        evalScripts(target, anchor.ownerDocument);\n    }\n}\n// @require ./insert_element.ts\nfunction insertSelectors(selectors, anchors, inverse, left, inside, reverseLoop1, reverseLoop2, reverseLoop3) {\n    each(selectors, function (si, selector) {\n        each(cash(selector), function (ti, target) {\n            each(cash(anchors), function (ai, anchor) {\n                var anchorFinal = inverse ? target : anchor;\n                var targetFinal = inverse ? anchor : target;\n                var indexFinal = inverse ? ti : ai;\n                insertElement(anchorFinal, !indexFinal ? targetFinal : targetFinal.cloneNode(true), left, inside, !indexFinal);\n            }, reverseLoop3);\n        }, reverseLoop2);\n    }, reverseLoop1);\n    return anchors;\n}\nfn.after = function () {\n    return insertSelectors(arguments, this, false, false, false, true, true);\n};\nfn.append = function () {\n    return insertSelectors(arguments, this, false, false, true);\n};\nfunction html(html) {\n    if (!arguments.length)\n        return this[0] && this[0].innerHTML;\n    if (isUndefined(html))\n        return this;\n    var hasScript = /<script[\\s>]/.test(html);\n    return this.each(function (i, ele) {\n        if (!isElement(ele))\n            return;\n        if (hasScript) {\n            cash(ele).empty().append(html);\n        }\n        else {\n            ele.innerHTML = html;\n        }\n    });\n}\nfn.html = html;\nfn.appendTo = function (selector) {\n    return insertSelectors(arguments, this, true, false, true);\n};\nfn.wrapInner = function (selector) {\n    return this.each(function (i, ele) {\n        var $ele = cash(ele);\n        var contents = $ele.contents();\n        contents.length ? contents.wrapAll(selector) : $ele.append(selector);\n    });\n};\nfn.before = function () {\n    return insertSelectors(arguments, this, false, true);\n};\nfn.wrapAll = function (selector) {\n    var structure = cash(selector);\n    var wrapper = structure[0];\n    while (wrapper.children.length)\n        wrapper = wrapper.firstElementChild;\n    this.first().before(structure);\n    return this.appendTo(wrapper);\n};\nfn.wrap = function (selector) {\n    return this.each(function (i, ele) {\n        var wrapper = cash(selector)[0];\n        cash(ele).wrapAll(!i ? wrapper : wrapper.cloneNode(true));\n    });\n};\nfn.insertAfter = function (selector) {\n    return insertSelectors(arguments, this, true, false, false, false, false, true);\n};\nfn.insertBefore = function (selector) {\n    return insertSelectors(arguments, this, true, true);\n};\nfn.prepend = function () {\n    return insertSelectors(arguments, this, false, true, true, true, true);\n};\nfn.prependTo = function (selector) {\n    return insertSelectors(arguments, this, true, true, true, false, false, true);\n};\nfn.contents = function () {\n    return cash(unique(pluck(this, function (ele) { return ele.tagName === 'IFRAME' ? [ele.contentDocument] : (ele.tagName === 'TEMPLATE' ? ele.content.childNodes : ele.childNodes); })));\n};\nfn.next = function (comparator, _all, _until) {\n    return filtered(cash(unique(pluck(this, 'nextElementSibling', _all, _until))), comparator);\n};\nfn.nextAll = function (comparator) {\n    return this.next(comparator, true);\n};\nfn.nextUntil = function (until, comparator) {\n    return this.next(comparator, true, until);\n};\nfn.parents = function (comparator, _until) {\n    return filtered(cash(unique(pluck(this, 'parentElement', true, _until))), comparator);\n};\nfn.parentsUntil = function (until, comparator) {\n    return this.parents(comparator, until);\n};\nfn.prev = function (comparator, _all, _until) {\n    return filtered(cash(unique(pluck(this, 'previousElementSibling', _all, _until))), comparator);\n};\nfn.prevAll = function (comparator) {\n    return this.prev(comparator, true);\n};\nfn.prevUntil = function (until, comparator) {\n    return this.prev(comparator, true, until);\n};\nfn.map = function (callback) {\n    return cash(concat.apply([], map.call(this, function (ele, i) { return callback.call(ele, i, ele); })));\n};\nfn.clone = function () {\n    return this.map(function (i, ele) { return ele.cloneNode(true); });\n};\nfn.offsetParent = function () {\n    return this.map(function (i, ele) {\n        var offsetParent = ele.offsetParent;\n        while (offsetParent && computeStyle(offsetParent, 'position') === 'static') {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || docEle;\n    });\n};\nfn.slice = function (start, end) {\n    return cash(slice.call(this, start, end));\n};\n// @require ./cash.ts\nvar dashAlphaRe = /-([a-z])/g;\nfunction camelCase(str) {\n    return str.replace(dashAlphaRe, function (match, letter) { return letter.toUpperCase(); });\n}\nfn.ready = function (callback) {\n    var cb = function () { return setTimeout(callback, 0, cash); };\n    if (doc.readyState !== 'loading') {\n        cb();\n    }\n    else {\n        doc.addEventListener('DOMContentLoaded', cb);\n    }\n    return this;\n};\nfn.unwrap = function () {\n    this.parent().each(function (i, ele) {\n        if (ele.tagName === 'BODY')\n            return;\n        var $ele = cash(ele);\n        $ele.replaceWith($ele.children());\n    });\n    return this;\n};\nfn.offset = function () {\n    var ele = this[0];\n    if (!ele)\n        return;\n    var rect = ele.getBoundingClientRect();\n    return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n    };\n};\nfn.position = function () {\n    var ele = this[0];\n    if (!ele)\n        return;\n    var isFixed = (computeStyle(ele, 'position') === 'fixed');\n    var offset = isFixed ? ele.getBoundingClientRect() : this.offset();\n    if (!isFixed) {\n        var doc_1 = ele.ownerDocument;\n        var offsetParent = ele.offsetParent || doc_1.documentElement;\n        while ((offsetParent === doc_1.body || offsetParent === doc_1.documentElement) && computeStyle(offsetParent, 'position') === 'static') {\n            offsetParent = offsetParent.parentNode;\n        }\n        if (offsetParent !== ele && isElement(offsetParent)) {\n            var parentOffset = cash(offsetParent).offset();\n            offset.top -= parentOffset.top + computeStyleInt(offsetParent, 'borderTopWidth');\n            offset.left -= parentOffset.left + computeStyleInt(offsetParent, 'borderLeftWidth');\n        }\n    }\n    return {\n        top: offset.top - computeStyleInt(ele, 'marginTop'),\n        left: offset.left - computeStyleInt(ele, 'marginLeft')\n    };\n};\nvar propMap = {\n    /* GENERAL */\n    class: 'className',\n    contenteditable: 'contentEditable',\n    /* LABEL */\n    for: 'htmlFor',\n    /* INPUT */\n    readonly: 'readOnly',\n    maxlength: 'maxLength',\n    tabindex: 'tabIndex',\n    /* TABLE */\n    colspan: 'colSpan',\n    rowspan: 'rowSpan',\n    /* IMAGE */\n    usemap: 'useMap'\n};\nfn.prop = function (prop, value) {\n    if (!prop)\n        return;\n    if (isString(prop)) {\n        prop = propMap[prop] || prop;\n        if (arguments.length < 2)\n            return this[0] && this[0][prop];\n        return this.each(function (i, ele) { ele[prop] = value; });\n    }\n    for (var key in prop) {\n        this.prop(key, prop[key]);\n    }\n    return this;\n};\nfn.removeProp = function (prop) {\n    return this.each(function (i, ele) { delete ele[propMap[prop] || prop]; });\n};\nvar cssVariableRe = /^--/;\n// @require ./variables.ts\nfunction isCSSVariable(prop) {\n    return cssVariableRe.test(prop);\n}\n// @require core/camel_case.ts\n// @require core/cash.ts\n// @require core/each.ts\n// @require core/variables.ts\n// @require ./is_css_variable.ts\nvar prefixedProps = {};\nvar style = div.style;\nvar vendorsPrefixes = ['webkit', 'moz', 'ms'];\nfunction getPrefixedProp(prop, isVariable) {\n    if (isVariable === void 0) { isVariable = isCSSVariable(prop); }\n    if (isVariable)\n        return prop;\n    if (!prefixedProps[prop]) {\n        var propCC = camelCase(prop);\n        var propUC = \"\".concat(propCC[0].toUpperCase()).concat(propCC.slice(1));\n        var props = (\"\".concat(propCC, \" \").concat(vendorsPrefixes.join(\"\".concat(propUC, \" \"))).concat(propUC)).split(' ');\n        each(props, function (i, p) {\n            if (p in style) {\n                prefixedProps[prop] = p;\n                return false;\n            }\n        });\n    }\n    return prefixedProps[prop];\n}\n// @require core/type_checking.ts\n// @require ./is_css_variable.ts\nvar numericProps = {\n    animationIterationCount: true,\n    columnCount: true,\n    flexGrow: true,\n    flexShrink: true,\n    fontWeight: true,\n    gridArea: true,\n    gridColumn: true,\n    gridColumnEnd: true,\n    gridColumnStart: true,\n    gridRow: true,\n    gridRowEnd: true,\n    gridRowStart: true,\n    lineHeight: true,\n    opacity: true,\n    order: true,\n    orphans: true,\n    widows: true,\n    zIndex: true\n};\nfunction getSuffixedValue(prop, value, isVariable) {\n    if (isVariable === void 0) { isVariable = isCSSVariable(prop); }\n    return !isVariable && !numericProps[prop] && isNumeric(value) ? \"\".concat(value, \"px\") : value;\n}\nfunction css(prop, value) {\n    if (isString(prop)) {\n        var isVariable_1 = isCSSVariable(prop);\n        prop = getPrefixedProp(prop, isVariable_1);\n        if (arguments.length < 2)\n            return this[0] && computeStyle(this[0], prop, isVariable_1);\n        if (!prop)\n            return this;\n        value = getSuffixedValue(prop, value, isVariable_1);\n        return this.each(function (i, ele) {\n            if (!isElement(ele))\n                return;\n            if (isVariable_1) {\n                ele.style.setProperty(prop, value);\n            }\n            else {\n                ele.style[prop] = value;\n            }\n        });\n    }\n    for (var key in prop) {\n        this.css(key, prop[key]);\n    }\n    return this;\n}\n;\nfn.css = css;\nfunction attempt(fn, arg) {\n    try {\n        return fn(arg);\n    }\n    catch (_a) {\n        return arg;\n    }\n}\n// @require core/attempt.ts\n// @require core/camel_case.ts\nvar JSONStringRe = /^\\s+|\\s+$/;\nfunction getData(ele, key) {\n    var value = ele.dataset[key] || ele.dataset[camelCase(key)];\n    if (JSONStringRe.test(value))\n        return value;\n    return attempt(JSON.parse, value);\n}\n// @require core/attempt.ts\n// @require core/camel_case.ts\nfunction setData(ele, key, value) {\n    value = attempt(JSON.stringify, value);\n    ele.dataset[camelCase(key)] = value;\n}\nfunction data(name, value) {\n    if (!name) {\n        if (!this[0])\n            return;\n        var datas = {};\n        for (var key in this[0].dataset) {\n            datas[key] = getData(this[0], key);\n        }\n        return datas;\n    }\n    if (isString(name)) {\n        if (arguments.length < 2)\n            return this[0] && getData(this[0], name);\n        if (isUndefined(value))\n            return this;\n        return this.each(function (i, ele) { setData(ele, name, value); });\n    }\n    for (var key in name) {\n        this.data(key, name[key]);\n    }\n    return this;\n}\nfn.data = data;\nfunction getDocumentDimension(doc, dimension) {\n    var docEle = doc.documentElement;\n    return Math.max(doc.body[\"scroll\".concat(dimension)], docEle[\"scroll\".concat(dimension)], doc.body[\"offset\".concat(dimension)], docEle[\"offset\".concat(dimension)], docEle[\"client\".concat(dimension)]);\n}\neach([true, false], function (i, outer) {\n    each(['Width', 'Height'], function (i, prop) {\n        var name = \"\".concat(outer ? 'outer' : 'inner').concat(prop);\n        fn[name] = function (includeMargins) {\n            if (!this[0])\n                return;\n            if (isWindow(this[0]))\n                return outer ? this[0][\"inner\".concat(prop)] : this[0].document.documentElement[\"client\".concat(prop)];\n            if (isDocument(this[0]))\n                return getDocumentDimension(this[0], prop);\n            return this[0][\"\".concat(outer ? 'offset' : 'client').concat(prop)] + (includeMargins && outer ? computeStyleInt(this[0], \"margin\".concat(i ? 'Top' : 'Left')) + computeStyleInt(this[0], \"margin\".concat(i ? 'Bottom' : 'Right')) : 0);\n        };\n    });\n});\neach(['Width', 'Height'], function (index, prop) {\n    var propLC = prop.toLowerCase();\n    fn[propLC] = function (value) {\n        if (!this[0])\n            return isUndefined(value) ? undefined : this;\n        if (!arguments.length) {\n            if (isWindow(this[0]))\n                return this[0].document.documentElement[\"client\".concat(prop)];\n            if (isDocument(this[0]))\n                return getDocumentDimension(this[0], prop);\n            return this[0].getBoundingClientRect()[propLC] - getExtraSpace(this[0], !index);\n        }\n        var valueNumber = parseInt(value, 10);\n        return this.each(function (i, ele) {\n            if (!isElement(ele))\n                return;\n            var boxSizing = computeStyle(ele, 'boxSizing');\n            ele.style[propLC] = getSuffixedValue(propLC, valueNumber + (boxSizing === 'border-box' ? getExtraSpace(ele, !index) : 0));\n        });\n    };\n});\nvar displayProperty = '___cd';\nfn.toggle = function (force) {\n    return this.each(function (i, ele) {\n        if (!isElement(ele))\n            return;\n        var hidden = isHidden(ele);\n        var show = isUndefined(force) ? hidden : force;\n        if (show) {\n            ele.style.display = ele[displayProperty] || '';\n            if (isHidden(ele)) {\n                ele.style.display = getDefaultDisplay(ele.tagName);\n            }\n        }\n        else if (!hidden) {\n            ele[displayProperty] = computeStyle(ele, 'display');\n            ele.style.display = 'none';\n        }\n    });\n};\nfn.hide = function () {\n    return this.toggle(false);\n};\nfn.show = function () {\n    return this.toggle(true);\n};\nvar eventsNamespace = '___ce';\nvar eventsNamespacesSeparator = '.';\nvar eventsFocus = { focus: 'focusin', blur: 'focusout' };\nvar eventsHover = { mouseenter: 'mouseover', mouseleave: 'mouseout' };\nvar eventsMouseRe = /^(mouse|pointer|contextmenu|drag|drop|click|dblclick)/i;\n// @require ./variables.ts\nfunction getEventNameBubbling(name) {\n    return eventsHover[name] || eventsFocus[name] || name;\n}\n// @require ./variables.ts\nfunction parseEventName(eventName) {\n    var parts = eventName.split(eventsNamespacesSeparator);\n    return [parts[0], parts.slice(1).sort()]; // [name, namespace[]]\n}\nfn.trigger = function (event, data) {\n    if (isString(event)) {\n        var _a = parseEventName(event), nameOriginal = _a[0], namespaces = _a[1];\n        var name_1 = getEventNameBubbling(nameOriginal);\n        if (!name_1)\n            return this;\n        var type = eventsMouseRe.test(name_1) ? 'MouseEvents' : 'HTMLEvents';\n        event = doc.createEvent(type);\n        event.initEvent(name_1, true, true);\n        event.namespace = namespaces.join(eventsNamespacesSeparator);\n        event.___ot = nameOriginal;\n    }\n    event.___td = data;\n    var isEventFocus = (event.___ot in eventsFocus);\n    return this.each(function (i, ele) {\n        if (isEventFocus && isFunction(ele[event.___ot])) {\n            ele[\"___i\".concat(event.type)] = true; // Ensuring the native event is ignored\n            ele[event.___ot]();\n            ele[\"___i\".concat(event.type)] = false; // Ensuring the custom event is not ignored\n        }\n        ele.dispatchEvent(event);\n    });\n};\n// @require ./variables.ts\nfunction getEventsCache(ele) {\n    return ele[eventsNamespace] = (ele[eventsNamespace] || {});\n}\n// @require core/guid.ts\n// @require events/helpers/get_events_cache.ts\nfunction addEvent(ele, name, namespaces, selector, callback) {\n    var eventCache = getEventsCache(ele);\n    eventCache[name] = (eventCache[name] || []);\n    eventCache[name].push([namespaces, selector, callback]);\n    ele.addEventListener(name, callback);\n}\nfunction hasNamespaces(ns1, ns2) {\n    return !ns2 || !some.call(ns2, function (ns) { return ns1.indexOf(ns) < 0; });\n}\n// @require ./get_events_cache.ts\n// @require ./has_namespaces.ts\n// @require ./parse_event_name.ts\nfunction removeEvent(ele, name, namespaces, selector, callback) {\n    var cache = getEventsCache(ele);\n    if (!name) {\n        for (name in cache) {\n            removeEvent(ele, name, namespaces, selector, callback);\n        }\n    }\n    else if (cache[name]) {\n        cache[name] = cache[name].filter(function (_a) {\n            var ns = _a[0], sel = _a[1], cb = _a[2];\n            if ((callback && cb.guid !== callback.guid) || !hasNamespaces(ns, namespaces) || (selector && selector !== sel))\n                return true;\n            ele.removeEventListener(name, cb);\n        });\n    }\n}\nfn.off = function (eventFullName, selector, callback) {\n    var _this = this;\n    if (isUndefined(eventFullName)) {\n        this.each(function (i, ele) {\n            if (!isElement(ele) && !isDocument(ele) && !isWindow(ele))\n                return;\n            removeEvent(ele);\n        });\n    }\n    else if (!isString(eventFullName)) {\n        for (var key in eventFullName) {\n            this.off(key, eventFullName[key]);\n        }\n    }\n    else {\n        if (isFunction(selector)) {\n            callback = selector;\n            selector = '';\n        }\n        each(getSplitValues(eventFullName), function (i, eventFullName) {\n            var _a = parseEventName(eventFullName), nameOriginal = _a[0], namespaces = _a[1];\n            var name = getEventNameBubbling(nameOriginal);\n            _this.each(function (i, ele) {\n                if (!isElement(ele) && !isDocument(ele) && !isWindow(ele))\n                    return;\n                removeEvent(ele, name, namespaces, selector, callback);\n            });\n        });\n    }\n    return this;\n};\nfn.remove = function (comparator) {\n    filtered(this, comparator).detach().off();\n    return this;\n};\nfn.replaceWith = function (selector) {\n    return this.before(selector).remove();\n};\nfn.replaceAll = function (selector) {\n    cash(selector).replaceWith(this);\n    return this;\n};\nfunction on(eventFullName, selector, data, callback, _one) {\n    var _this = this;\n    if (!isString(eventFullName)) {\n        for (var key in eventFullName) {\n            this.on(key, selector, data, eventFullName[key], _one);\n        }\n        return this;\n    }\n    if (!isString(selector)) {\n        if (isUndefined(selector) || isNull(selector)) {\n            selector = '';\n        }\n        else if (isUndefined(data)) {\n            data = selector;\n            selector = '';\n        }\n        else {\n            callback = data;\n            data = selector;\n            selector = '';\n        }\n    }\n    if (!isFunction(callback)) {\n        callback = data;\n        data = undefined;\n    }\n    if (!callback)\n        return this;\n    each(getSplitValues(eventFullName), function (i, eventFullName) {\n        var _a = parseEventName(eventFullName), nameOriginal = _a[0], namespaces = _a[1];\n        var name = getEventNameBubbling(nameOriginal);\n        var isEventHover = (nameOriginal in eventsHover);\n        var isEventFocus = (nameOriginal in eventsFocus);\n        if (!name)\n            return;\n        _this.each(function (i, ele) {\n            if (!isElement(ele) && !isDocument(ele) && !isWindow(ele))\n                return;\n            var finalCallback = function (event) {\n                if (event.target[\"___i\".concat(event.type)])\n                    return event.stopImmediatePropagation(); // Ignoring native event in favor of the upcoming custom one\n                if (event.namespace && !hasNamespaces(namespaces, event.namespace.split(eventsNamespacesSeparator)))\n                    return;\n                if (!selector && ((isEventFocus && (event.target !== ele || event.___ot === name)) || (isEventHover && event.relatedTarget && ele.contains(event.relatedTarget))))\n                    return;\n                var thisArg = ele;\n                if (selector) {\n                    var target = event.target;\n                    while (!matches(target, selector)) {\n                        if (target === ele)\n                            return;\n                        target = target.parentNode;\n                        if (!target)\n                            return;\n                    }\n                    thisArg = target;\n                }\n                Object.defineProperty(event, 'currentTarget', {\n                    configurable: true,\n                    get: function () {\n                        return thisArg;\n                    }\n                });\n                Object.defineProperty(event, 'delegateTarget', {\n                    configurable: true,\n                    get: function () {\n                        return ele;\n                    }\n                });\n                Object.defineProperty(event, 'data', {\n                    configurable: true,\n                    get: function () {\n                        return data;\n                    }\n                });\n                var returnValue = callback.call(thisArg, event, event.___td);\n                if (_one) {\n                    removeEvent(ele, name, namespaces, selector, finalCallback);\n                }\n                if (returnValue === false) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n            };\n            finalCallback.guid = callback.guid = (callback.guid || cash.guid++);\n            addEvent(ele, name, namespaces, selector, finalCallback);\n        });\n    });\n    return this;\n}\nfn.on = on;\nfunction one(eventFullName, selector, data, callback) {\n    return this.on(eventFullName, selector, data, callback, true);\n}\n;\nfn.one = one;\nvar queryEncodeCRLFRe = /\\r?\\n/g;\nfunction queryEncode(prop, value) {\n    return \"&\".concat(encodeURIComponent(prop), \"=\").concat(encodeURIComponent(value.replace(queryEncodeCRLFRe, '\\r\\n')));\n}\nvar skippableRe = /file|reset|submit|button|image/i;\nvar checkableRe = /radio|checkbox/i;\nfn.serialize = function () {\n    var query = '';\n    this.each(function (i, ele) {\n        each(ele.elements || [ele], function (i, ele) {\n            if (ele.disabled || !ele.name || ele.tagName === 'FIELDSET' || skippableRe.test(ele.type) || (checkableRe.test(ele.type) && !ele.checked))\n                return;\n            var value = getValue(ele);\n            if (!isUndefined(value)) {\n                var values = isArray(value) ? value : [value];\n                each(values, function (i, value) {\n                    query += queryEncode(ele.name, value);\n                });\n            }\n        });\n    });\n    return query.slice(1);\n};\n// @require core/types.ts\n// @require core/cash.ts\n// @require core/type_checking.ts\n// @require core/variables.ts\n// @require core/each.ts\n// @require core/extend.ts\n// @require core/find.ts\n// @require core/get_compare_function.ts\n// @require core/get_split_values.ts\n// @require core/guid.ts\n// @require core/parse_html.ts\n// @require core/unique.ts\n// @require attributes/add_class.ts\n// @require attributes/attr.ts\n// @require attributes/has_class.ts\n// @require attributes/prop.ts\n// @require attributes/remove_attr.ts\n// @require attributes/remove_class.ts\n// @require attributes/remove_prop.ts\n// @require attributes/toggle_class.ts\n// @require collection/add.ts\n// @require collection/each.ts\n// @require collection/eq.ts\n// @require collection/filter.ts\n// @require collection/first.ts\n// @require collection/get.ts\n// @require collection/index.ts\n// @require collection/last.ts\n// @require collection/map.ts\n// @require collection/slice.ts\n// @require css/css.ts\n// @require data/data.ts\n// @require dimensions/inner_outer.ts\n// @require dimensions/normal.ts\n// @require effects/hide.ts\n// @require effects/show.ts\n// @require effects/toggle.ts\n// @require events/off.ts\n// @require events/on.ts\n// @require events/one.ts\n// @require events/ready.ts\n// @require events/trigger.ts\n// @require forms/serialize.ts\n// @require forms/val.ts\n// @require manipulation/after.ts\n// @require manipulation/append.ts\n// @require manipulation/append_to.ts\n// @require manipulation/before.ts\n// @require manipulation/clone.ts\n// @require manipulation/detach.ts\n// @require manipulation/empty.ts\n// @require manipulation/html.ts\n// @require manipulation/insert_after.ts\n// @require manipulation/insert_before.ts\n// @require manipulation/prepend.ts\n// @require manipulation/prepend_to.ts\n// @require manipulation/remove.ts\n// @require manipulation/replace_all.ts\n// @require manipulation/replace_with.ts\n// @require manipulation/text.ts\n// @require manipulation/unwrap.ts\n// @require manipulation/wrap.ts\n// @require manipulation/wrap_all.ts\n// @require manipulation/wrap_inner.ts\n// @require offset/offset.ts\n// @require offset/offset_parent.ts\n// @require offset/position.ts\n// @require traversal/children.ts\n// @require traversal/closest.ts\n// @require traversal/contents.ts\n// @require traversal/find.ts\n// @require traversal/has.ts\n// @require traversal/is.ts\n// @require traversal/next.ts\n// @require traversal/next_all.ts\n// @require traversal/next_until.ts\n// @require traversal/not.ts\n// @require traversal/parent.ts\n// @require traversal/parents.ts\n// @require traversal/parents_until.ts\n// @require traversal/prev.ts\n// @require traversal/prev_all.ts\n// @require traversal/prev_until.ts\n// @require traversal/siblings.ts\n// @no-require extras/get_script.ts\n// @no-require extras/shorthands.ts\n// @require methods.ts\nif (true) { // Node.js\n    module.exports = cash;\n}\nelse {}\n})();\n\n//# sourceURL=webpack://underscores/./node_modules/cash-dom/dist/cash.js?");

/***/ }),

/***/ "./sass/style.scss":
/*!*************************!*\
  !*** ./sass/style.scss ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://underscores/./sass/style.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;